// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Mohamed3nan
// https://TradingView.com/u/Mohamed3nan
// https://Github.com/Mohamed3nan/TradingView
//////////////////////////////////////////////
//        /\                                //
//       /  \     _ __     __ _   _ __      //
//      / /\ \   | '_ \   / _` | | '_ \     //
//     / ____ \  | | | | | (_| | | | | |    //
//    /_/    \_\ |_| |_|  \__,_| |_| |_|    //
//////////////////////////////////////////////

//@version=5
indicator(title = "MFI/RSI/DIV [Anan]", overlay = false, max_bars_back = 500, max_lines_count = 500, max_labels_count = 500, max_boxes_count = 500)


//-----------------Inputs-----------------//
space = " "
s = "‏ "
RSI_src = input.source(title="RSI Source",      	 defval=close, inline= "1", group= "═══════════ Indicator settings ═══════════", tooltip="")
RSI_len = input.int(   title="RSI Lenght"+s+s,       defval=14,    inline= "1", group= "═══════════ Indicator settings ═══════════", tooltip="")
MFI_src = input.source(title="MFI Source",     		 defval=hlc3,  inline= "2", group= "═══════════ Indicator settings ═══════════", tooltip="")
MFI_len = input.int(   title="MFI Lenght"+s,         defval=14,    inline= "2", group= "═══════════ Indicator settings ═══════════", tooltip="")
RSIHigh = input.int(   title="RSI Limit: Upper"+s+s, defval=70,    inline= "1", group= "═══════════════ Plottng ═══════════════",  	 tooltip="")
RSILow  = input.int(   title="Lower", 				 defval=30,    inline= "1", group= "═══════════════ Plottng ═══════════════", 	 tooltip="")
MFIHigh = input.int(   title="MFI Limit: Upper",     defval=80,    inline= "2", group= "═══════════════ Plottng ═══════════════",    tooltip="")
MFILow  = input.int(   title="Lower"+s, 			 defval=20,    inline= "2", group= "═══════════════ Plottng ═══════════════",    tooltip="")


//---------------Functions---------------//
pine_mfi(x, y) =>
    currentMf = 0.0
    previousMf = 0.0
    positiveMf = 0.0
    negativeMf = 0.0
    for i = 0 to y - 1 by 1
        currentMf := x[i] * volume[i]
        previousMf := x[i + 1] * volume[i + 1]
        if na(x[i + 1])
            positiveMf := na
            negativeMf := na
            negativeMf
        else
            if x[i] > x[i + 1]
                positiveMf += currentMf
                positiveMf

            if x[i] < x[i + 1]
                negativeMf += currentMf
                negativeMf

    ratio = positiveMf / negativeMf
    mfi = 100 - 100 / (1 + ratio)
    mfi


//---------------Calculations---------------//
MFI = pine_mfi(MFI_src, MFI_len)
col = MFI >= MFIHigh ? color.blue : MFI <= MFILow ? color.blue : MFI >= 50 and MFI < MFIHigh ? color.blue : MFI < 50 and MFI > MFILow ? color.blue : na

rsi = ta.rsi(RSI_src, RSI_len)
col2 = rsi >= RSIHigh ? color.yellow : rsi <= RSILow ? color.yellow : rsi >= 50 and rsi < RSIHigh ? color.yellow : rsi < 50 and rsi > RSILow ? color.yellow : na


//-----------------Plotting-----------------//
plot(MFI, style=plot.style_line, linewidth=1, color=col , title="MFI")
MFILabel = label.new(x=bar_index+2, y=MFI, text="MFI: " + str.tostring(MFI,"#.#"), color=col, style=label.style_none, textcolor=col, size=size.small)
label.delete(MFILabel[1])

plot(rsi, style=plot.style_line, linewidth=1, color=col2, title="RSI")
rsiLabel = label.new(x=bar_index+2, y=rsi, text="RSI: " + str.tostring(rsi,"#.#"), color=col2, style=label.style_none, textcolor=col2, size=size.small)
label.delete(rsiLabel[1])

MidLine     = hline(50     , linestyle= hline.style_dotted, color=color.new(color.gray , 50))
MFIHighLine = hline(MFIHigh, linestyle= hline.style_dotted, color=color.new(color.red  , 50))
MFILowLine  = hline(MFILow , linestyle= hline.style_dotted, color=color.new(color.green, 50))
RSIHighLine = hline(RSIHigh, linestyle= hline.style_dotted, color=color.new(color.red  , 50))
RSILowLine  = hline(RSILow , linestyle= hline.style_dotted, color=color.new(color.green, 50))

//fill(hline(MFIHigh), hline(MFILow), color=color.new(color.white, 95))
fill(RSIHighLine, RSILowLine, color=color.new(color.white, 95))

bgcolor(MFI > 50 ? color.new(color.green,95) : color.new(color.red,95))
bgcolor(rsi > 50 ? color.new(color.green,95) : color.new(color.red,95))


//-----------------Divergence Indicator-----------------//
lbL             = input.int(  title="Pivot Lookback: Left"+s+s, defval=2, 			  				 inline= "1", group= "═══════════════ Divergence ═══════════════", tooltip="")
lbR             = input.int(  title="Right", 				    defval=2, 			  				 inline= "1", group= "═══════════════ Divergence ═══════════════", tooltip="")
rangeLower      = input.int(  title="Lookback Range: Min", 		defval=2, 		      				 inline= "2", group= "═══════════════ Divergence ═══════════════", tooltip="")
rangeUpper      = input.int(  title="Max"+s+s+s, 				defval=60, 			  				 inline= "2", group= "═══════════════ Divergence ═══════════════", tooltip="")
plotBull        = input.bool( title="Regular Bullish", 			defval=true, 		  				 inline= "3", group= "═══════════════ Divergence ═══════════════", tooltip="")
bullColor 		= input.color(title = ""+s+s, 				   	defval=color.new(color.green, 25), inline= "3", group= "═══════════════ Divergence ═══════════════", tooltip="")
plotHiddenBull  = input.bool( title="Hidden Bullish",           defval=false, 	      				 inline= "3", group= "═══════════════ Divergence ═══════════════", tooltip="")
hiddenBullColor = input.color(title = ""+s+s, 				    defval=color.new(color.green, 25), inline= "3", group= "═══════════════ Divergence ═══════════════", tooltip="")
plotBear	    = input.bool( title="Regular Bearish", 	        defval=true, 		  				 inline= "4", group= "═══════════════ Divergence ═══════════════", tooltip="")
bearColor 		= input.color(title = "", 				        defval=color.new(color.red, 25),   inline= "4", group= "═══════════════ Divergence ═══════════════", tooltip="")
plotHiddenBear  = input.bool( title="Hidden Bearish",           defval=false, 		  			     inline= "4", group= "═══════════════ Divergence ═══════════════", tooltip="")
hiddenBearColor = input.color(title = "", 				        defval=color.new(color.red, 25),   inline= "4", group= "═══════════════ Divergence ═══════════════", tooltip="")
textColor = color.white
noneColor = color.new(color.white, 100)


osc = MFI

plFound = na(ta.pivotlow(osc, lbL, lbR)) ? false : true
phFound = na(ta.pivothigh(osc, lbL, lbR)) ? false : true
_inRange(cond) =>
	bars = ta.barssince(cond == true)
	rangeLower <= bars and bars <= rangeUpper

//------------------------------------------------------------------------------
// Regular Bullish
// Osc: Higher Low

oscHL = osc[lbR] > ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Lower Low

priceLL = low[lbR] < ta.valuewhen(plFound, low[lbR], 1)
bullCond = plotBull and priceLL and oscHL and plFound

plot(
     plFound ? osc[lbR] : na,
     offset=-lbR,
     title="Regular Bullish",
     linewidth=1,
     color=(bullCond ? bullColor : noneColor)
     )


plotshape(
	 bullCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bullish Label",
	 text="R",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Hidden Bullish
// Osc: Lower Low

oscLL = osc[lbR] < ta.valuewhen(plFound, osc[lbR], 1) and _inRange(plFound[1])

// Price: Higher Low

priceHL = low[lbR] > ta.valuewhen(plFound, low[lbR], 1)
hiddenBullCond = plotHiddenBull and priceHL and oscLL and plFound

plot(
	 plFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish",
	 linewidth=1,
	 color=(hiddenBullCond ? hiddenBullColor : noneColor)
	 )

plotshape(
	 hiddenBullCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish Label",
	 text="H",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Regular Bearish
// Osc: Lower High

oscLH = osc[lbR] < ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Higher High

priceHH = high[lbR] > ta.valuewhen(phFound, high[lbR], 1)

bearCond = plotBear and priceHH and oscLH and phFound

plot(
	 phFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish",
	 linewidth=1,
	 color=(bearCond ? bearColor : noneColor)
	 )

plotshape(
	 bearCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish Label",
	 text="R",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Hidden Bearish
// Osc: Higher High

oscHH = osc[lbR] > ta.valuewhen(phFound, osc[lbR], 1) and _inRange(phFound[1])

// Price: Lower High

priceLH = high[lbR] < ta.valuewhen(phFound, high[lbR], 1)

hiddenBearCond = plotHiddenBear and priceLH and oscHH and phFound

plot(
	 phFound ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish",
	 linewidth=1,
	 color=(hiddenBearCond ? hiddenBearColor : noneColor)
	 )

plotshape(
	 hiddenBearCond ? osc[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish Label",
	 text="H",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor
	 )




osc2 = rsi

plFound2 = na(ta.pivotlow(osc2, lbL, lbR)) ? false : true
phFound2 = na(ta.pivothigh(osc2, lbL, lbR)) ? false : true

//------------------------------------------------------------------------------
// Regular Bullish
// osc2: Higher Low

oscHL2 = osc2[lbR] > ta.valuewhen(plFound2, osc2[lbR], 1) and _inRange(plFound2[1])

// Price: Lower Low

priceLL2 = low[lbR] < ta.valuewhen(plFound2, low[lbR], 1)
bullCond2 = plotBull and priceLL2 and oscHL2 and plFound2

plot(
     plFound2 ? osc2[lbR] : na,
     offset=-lbR,
     title="Regular Bullish",
     linewidth=1,
     color=(bullCond2 ? bullColor : noneColor)
     )


plotshape(
	 bullCond2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Regular Bullish Label",
	 text="R",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Hidden Bullish
// osc2: Lower Low

oscLL2 = osc2[lbR] < ta.valuewhen(plFound2, osc2[lbR], 1) and _inRange(plFound2[1])

// Price: Higher Low

priceHL2 = low[lbR] > ta.valuewhen(plFound2, low[lbR], 1)
hiddenBullCond2 = plotHiddenBull and priceHL2 and oscLL2 and plFound2

plot(
	 plFound2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish",
	 linewidth=1,
	 color=(hiddenBullCond2 ? hiddenBullColor : noneColor)
	 )

plotshape(
	 hiddenBullCond2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bullish Label",
	 text="H",
	 style=shape.labelup,
	 location=location.absolute,
	 color=bullColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Regular Bearish
// osc2: Lower High

oscLH2 = osc2[lbR] < ta.valuewhen(phFound2, osc2[lbR], 1) and _inRange(phFound2[1])

// Price: Higher High

priceHH2 = high[lbR] > ta.valuewhen(phFound2, high[lbR], 1)

bearCond2 = plotBear and priceHH2 and oscLH2 and phFound2

plot(
	 phFound2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish",
	 linewidth=1,
	 color=(bearCond2 ? bearColor : noneColor)
	 )

plotshape(
	 bearCond2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Regular Bearish Label",
	 text="R",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor
	 )

//------------------------------------------------------------------------------
// Hidden Bearish
// osc2: Higher High

oscHH2 = osc2[lbR] > ta.valuewhen(phFound2, osc2[lbR], 1) and _inRange(phFound2[1])

// Price: Lower High

priceLH2 = high[lbR] < ta.valuewhen(phFound2, high[lbR], 1)

hiddenBearCond2 = plotHiddenBear and priceLH2 and oscHH2 and phFound2

plot(
	 phFound2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish",
	 linewidth=1,
	 color=(hiddenBearCond2 ? hiddenBearColor : noneColor)
	 )

plotshape(
	 hiddenBearCond2 ? osc2[lbR] : na,
	 offset=-lbR,
	 title="Hidden Bearish Label",
	 text="H",
	 style=shape.labeldown,
	 location=location.absolute,
	 color=bearColor,
	 textcolor=textColor
	 )